[Unit]
Description=Puma HTTP Server
After=network.target


[Service]
# Puma supports systemd's `Type=notify` and watchdog service
# monitoring, if the [sd_notify](https://github.com/agis/ruby-sdnotify) gem is installed,
# as of Puma 5.1 or later.
# On earlier versions of Puma or JRuby, change this to `Type=simple` and remove
# the `WatchdogSec` line.
Type=simple

# If your Puma process locks up, systemd's watchdog will restart it within seconds.
#WatchdogSec=10

# Preferably configure a non-privileged user
# User=
User=cryo

# The path to the your application code root directory.
# Also replace the "<YOUR_APP_PATH>" place holders below with this path.
# Example /home/username/myapp
#WorkingDirectory=<YOUR_APP_PATH>
WorkingDirectory=/home/cryo/current
# Helpful for debugging socket activation, etc.
# Environment=PUMA_DEBUG=1
#Environment=RAILS_MASTER_KEY=

# SystemD will not run puma even if it is in your path. You must specify
# an absolute URL to puma. For example /usr/local/bin/puma
# Alternatively, create a binstub with `bundle binstubs puma --path ./sbin` in the WorkingDirectory

ExecStart=/bin/bash -lc '/home/cryo/.rbenv/versions/2.6.6/bin/bundle exec --keep-file-descriptors puma -e validation -C /home/cryo/current/config/puma.rb'

PIDFile=/home/cryo/current/puma.pid

Restart=always

[Install]
WantedBy=multi-user.target


