[Unit]
Description=sidekiq
After=syslog.target network.target

# Uncomment for socket activation (see below)
# Requires=puma.socket

[Service]
# Puma supports systemd's `Type=notify` and watchdog service
# monitoring, if the [sd_notify](https://github.com/agis/ruby-sdnotify) gem is installed,
# as of Puma 5.1 or later.
# On earlier versions of Puma or JRuby, change this to `Type=simple` and remove
# the `WatchdogSec` line.
#Type=notify
Type=simple
# If your Puma process locks up, systemd's watchdog will restart it within seconds.
#WatchdogSec=10

# Preferably configure a non-privileged user
# User=
User={{ deploy_user }}

# The path to the your application code root directory.
# Also replace the "<YOUR_APP_PATH>" place holders below with this path.
# Example /home/username/myapp
#WorkingDirectory=<YOUR_APP_PATH>
WorkingDirectory={{deploy_dir}}{{deploy_app_name}}
# Helpful for debugging socket activation, etc.
#Environment=MALLOC_ARENA_MAX=2
Environment=RAILS_MASTER_KEY={{ RAILS_MASTER_KEYS }}

# Alternatively, create a binstub with `bundle binstubs puma --path ./sbin` in the WorkingDirectory
#ExecStart=/bin/bash -lc '/opt/rubies/ruby-{{ruby_version }}/bin/bundle exec --keep-file-descriptors sidekiq -e {{ app_env }} -C {{ deploy_dir }}{{ deploy_app_name }}/shared/config/sidekiq.yml'
ExecStart=/bin/bash -lc '/opt/rubies/ruby-{{ruby_version }}/bin/bundle exec --keep-file-descriptors sidekiq -e {{ app_env }} -L /home/cryo/sidekiq.log'

#ExecStop= {{ deploy_dir }}.gem/ruby/{{ruby_version }}/bin/bundle exec puma -e production -S {{ deploy_dir }}{{ deploy_app_name }}/shared/puma.rb
#bundle exec sidekiq -e validation -L /home/cryo/sidekiq.log

PIDFile={{deploy_dir}}{{deploy_app_name}}/puma.pid

# if we crash, restart
RestartSec=1
Restart=on-failure

# output goes to /var/log/syslog
StandardOutput=syslog
StandardError=syslog

# This will default to "bundler" if we don't specify it
SyslogIdentifier=sidekiq



Restart=always

[Install]
WantedBy=multi-user.target
